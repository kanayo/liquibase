package liquibase.database;

import java.sql.*;

/**
 * A liquibase abstraction over the normal Connection that is available in
 * java.sql. This interface allows wrappers and aspects over the basic 
 * connection.
 * 
 * @see SybaseConnectionDelegate
 * @see SQLConnectionDelegate
 * @author <a href="mailto:csuml@yahoo.co.uk">Paul Keeble</a>
 *
 */
public interface DatabaseConnection {

    public void close() throws SQLException;

    public void commit() throws SQLException;

    public Statement createStatement() throws SQLException;

    public Statement createStatement(int resultSetType, int resultSetConcurrency) throws SQLException ;

    public Statement createStatement(int resultSetType,
            int resultSetConcurrency, int resultSetHoldability) throws SQLException ;

    public boolean getAutoCommit() throws SQLException;

    public String getCatalog() throws SQLException;

    public DatabaseMetaData getMetaData() throws SQLException;

    public String nativeSQL(String sql) throws SQLException;

    public CallableStatement prepareCall(String sql) throws SQLException;

    public CallableStatement prepareCall(String sql, int resultSetType,
            int resultSetConcurrency) throws SQLException;

    public CallableStatement prepareCall(String sql, int resultSetType,
            int resultSetConcurrency, int resultSetHoldability)
            throws SQLException;

    public PreparedStatement prepareStatement(String sql) throws SQLException;

    public PreparedStatement prepareStatement(String sql, int autoGeneratedKeys)
            throws SQLException;

    public PreparedStatement prepareStatement(String sql, int[] columnIndexes)
            throws SQLException;

    public PreparedStatement prepareStatement(String sql, String[] columnNames)
            throws SQLException;

    public PreparedStatement prepareStatement(String sql, int resultSetType,
            int resultSetConcurrency) throws SQLException;

    public PreparedStatement prepareStatement(String sql, int resultSetType,
            int resultSetConcurrency, int resultSetHoldability)
            throws SQLException;


    public void rollback() throws SQLException;

    public void setAutoCommit(boolean autoCommit) throws SQLException;

    public Connection getUnderlyingConnection();
}
